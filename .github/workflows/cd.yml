name: CD
run-name: Deploy to AWS ECS instance
on:
  workflow_run:
    workflows: ["deploy"]
    types:
      - completed
jobs:
  build:

    runs-on: self-hosted
    steps:

    - name: Navigate to the Repository
      run: cd $GITHUB_WORKSPACE

    - name: Install Docker
      run: |
        if ! command -v docker &> /dev/null; then
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
        fi
        docker --version

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Remove old Docker image (if exists)
      run: |
        sudo docker rmi -f danielyilma/studymate:latest || true


    - name: pull docker image
      run: sudo docker pull danielyilma/studymate:latest

    - name: Create .env File
      run: |
        cd ${{ github.workspace }}
        echo "GEMNI_API_KEY=${{ secrets.GEMNI_API_KEY }}" | sudo tee -a .env > /dev/null
        echo "HOSTS=${{ secrets.HOSTS }}" | sudo tee -a .env > /dev/null
        echo "CLOUDINARY_URL=${{ secrets.CLOUDINARY_URL }}" | sudo tee -a .env > /dev/null
        echo "SOCIAL_AUTH_GOOGLE_OAUTH2_KEY=${{ secrets.SOCIAL_AUTH_GOOGLE_OAUTH2_KEY }}" | sudo tee -a .env > /dev/null
        echo "SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET=${{ secrets.SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET }}" | sudo tee -a .env > /dev/null
        echo "PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }}" | sudo tee -a .env > /dev/null
        echo "PINECONE_ENV=${{ secrets.PINECONE_ENV }}" | sudo tee -a .env > /dev/null
        echo "PINECONE_INDEX_NAME=${{ secrets.PINECONE_INDEX_NAME }}" | sudo tee -a .env > /dev/null
        echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" | sudo tee -a .env > /dev/null
        echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" | sudo tee -a .env > /dev/null

    - name: Start Backend and Nginx Services
      run: |
        cd ${{ github.workspace }}
        sudo docker-compose up -d --remove-orphans
