name: CD
run-name: Deploy to AWS ECS instance
on:
  workflow_run:
    workflows: ["deploy"]
    types:
      - completed
jobs:
  build:

    runs-on: self-hosted
    steps:

    - name: Navigate to the Repository
      run: cd $GITHUB_WORKSPACE

    - name: Install Docker
      run: |
        curl -fsSL https://get.docker.com -o get-docker.sh
        sudo sh get-docker.sh
        sudo usermod -aG docker $USER
        docker --version
      
    - name: Install Docker Compose (v2)
      run: |
        DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
        mkdir -p $DOCKER_CONFIG/cli-plugins
        curl -SL https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
        chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
        docker compose version

    - name: Remove old Docker image (if exists)
      run: |
        sudo docker rmi -f danielyilma/studymate:latest || true


    - name: pull docker image
      run: sudo docker pull danielyilma/studymate:latest

    - name: Create .env File
      run: |
        cd ${{ github.workspace }}
        echo "GEMNI_API_KEY=${{ secrets.GEMNI_API_KEY }}" | sudo tee -a .env > /dev/null
        echo "HOSTS=${{ secrets.HOSTS }}" | sudo tee -a .env > /dev/null
        echo "CLOUDINARY_URL=${{ secrets.CLOUDINARY_URL }}" | sudo tee -a .env > /dev/null
        echo "SOCIAL_AUTH_GOOGLE_OAUTH2_KEY=${{ secrets.SOCIAL_AUTH_GOOGLE_OAUTH2_KEY }}" | sudo tee -a .env > /dev/null
        echo "SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET=${{ secrets.SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET }}" | sudo tee -a .env > /dev/null
        echo "PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }}" | sudo tee -a .env > /dev/null
        echo "PINECONE_ENV=${{ secrets.PINECONE_ENV }}" | sudo tee -a .env > /dev/null
        echo "PINECONE_INDEX_NAME=${{ secrets.PINECONE_INDEX_NAME }}" | sudo tee -a .env > /dev/null
        echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" | sudo tee -a .env > /dev/null
        echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" | sudo tee -a .env > /dev/null

    - name: Start Backend and Nginx Services
      run: |
        cd ${{ github.workspace }}
        sudo docker-compose up -d --remove-orphans
